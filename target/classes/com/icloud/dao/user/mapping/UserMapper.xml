<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icloud.dao.user.UserMapper">
	 <resultMap id="BaseResultMap" type="com.icloud.model.user.User">
	    <id column="id" jdbcType="VARCHAR" property="id" />
	    <result column="real_name" jdbcType="VARCHAR" property="realName" />
	    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
	    <result column="phone" jdbcType="VARCHAR" property="phone" />
	    <result column="heard_url" jdbcType="VARCHAR" property="heardUrl" />
	    <result column="uid" jdbcType="VARCHAR" property="uid" />
	    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
	    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
	    <result column="openid" jdbcType="VARCHAR" property="openid" />
	    <result column="university" jdbcType="VARCHAR" property="university" />
	    <result column="major" jdbcType="VARCHAR" property="major" />
	    <result column="grades" jdbcType="VARCHAR" property="grades" />
	    <result column="hobbies" jdbcType="VARCHAR" property="hobbies" />
	    <result column="remain_score" jdbcType="BIGINT" property="remainScore" />
	    <result column="total_score" jdbcType="BIGINT" property="totalScore" />
	    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>

	 <sql id="Base_Column_List">
    id, real_name, nick_name, email, phone, heard_url, uid, pwd, unionid, openid, university, 
    major, grades, hobbies, remain_score, total_score, status
  </sql>

	<delete id="deleteByKey" parameterType="String">
		delete from t_user
		where id=${id}
	</delete>

	<insert id="save" parameterType="com.icloud.model.user.User">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into t_user (id, real_name, nick_name, email, phone, heard_url, uid, pwd, unionid, openid, university, 
    major, grades, hobbies, remain_score, total_score, status) values
		(#{id,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{heardUrl,jdbcType=VARCHAR}, 
      #{uid,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{university,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{grades,jdbcType=VARCHAR}, #{hobbies,jdbcType=VARCHAR}, #{remainScore,jdbcType=BIGINT}, 
      #{totalScore,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR})
	</insert>

	<update id="update" parameterType="com.icloud.model.user.User">
		update t_user
		<set>
			<if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="heardUrl != null">
        heard_url = #{heardUrl,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="grades != null">
        grades = #{grades,jdbcType=VARCHAR},
      </if>
      <if test="hobbies != null">
        hobbies = #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="remainScore != null">
        remain_score = #{remainScore,jdbcType=BIGINT},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
		</set>
		where id=#{id}
	</update>

	<select id="findForObject" parameterType="String" resultMap="BaseResultMap">
		select 
     <include refid="Base_Column_List" />
       from t_user 
		 where id=#{id}
	</select>
   
    <select id="findForList" parameterType="com.icloud.model.user.User" resultMap="BaseResultMap">
       select 
    <include refid="Base_Column_List" />
       from t_user 
       <where>
		  <if test="nickName!=null">
				and nick_name like concat(concat('%',#{nickName}),'%')
		  </if>
		  <if test="realName!=null">
				and real_name like concat(concat('%',#{realName}),'%')
		  </if>
		  <if test="openid!=null">
				and openid like concat(concat('%',#{openid}),'%')
		  </if>
		  <if test="status!=null">
				and status=#{status}
		  </if>
		  <if test="university!=null">
				and university like concat(concat('%',#{university}),'%')
		  </if>
		   <if test="uid!=null">
				and uid like concat(concat('%',#{uid}),'%')
		  </if>
		  
		</where>
    
    </select>
    
    <select id="findCount" parameterType="com.icloud.model.user.User" resultType="Integer">
       select count(1) from t_user t
       <where>
		  <if test="nickName!=null">
				and nick_name like concat(concat('%',#{nick}),'%')
		  </if>
		 <if test="openid!=null">
				and t.openid like concat(concat('%',#{openid}),'%')
		  </if>
		</where>
    </select>

    <select id="findByopenId" parameterType="String" resultMap="BaseResultMap">
       select 
      <include refid="Base_Column_List" />
       from t_user t 
       where t.openid=#{openid}
    </select>
    
    <!-- 解绑用户，删除其图书馆账号和密码 -->
	<update id="updateUnbind" parameterType="String">
		update t_user set uid="",pwd="" where id=#{id}
	</update>

</mapper>