<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icloud.dao.score.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.icloud.model.score.Score">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="header_url" jdbcType="VARCHAR" property="headerUrl" />
    <result column="from_mark" jdbcType="VARCHAR" property="fromMark" />
    <result column="descbic" jdbcType="VARCHAR" property="descbic" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, unionid, nick_name, header_url, from_mark, descbic, score, create_time
  </sql>
  
  <sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="selectByExample" parameterType="com.icloud.common.QueryBuilder"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from t_score
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="countByExample" parameterType="com.icloud.common.QueryBuilder"
		resultType="java.lang.Long">
		select count(*) from t_score
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_score
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_score
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.icloud.model.score.Score">
  	<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
	</selectKey>
    insert into t_score (id, openid, unionid, 
      nick_name, header_url, from_mark, 
      descbic, score, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{headerUrl,jdbcType=VARCHAR}, #{fromMark,jdbcType=VARCHAR}, 
      #{descbic,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.icloud.model.score.Score">
    insert into t_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="headerUrl != null">
        header_url,
      </if>
      <if test="fromMark != null">
        from_mark,
      </if>
      <if test="descbic != null">
        descbic,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headerUrl != null">
        #{headerUrl,jdbcType=VARCHAR},
      </if>
      <if test="fromMark != null">
        #{fromMark,jdbcType=VARCHAR},
      </if>
      <if test="descbic != null">
        #{descbic,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.icloud.model.score.Score">
    update t_score
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headerUrl != null">
        header_url = #{headerUrl,jdbcType=VARCHAR},
      </if>
      <if test="fromMark != null">
        from_mark = #{fromMark,jdbcType=VARCHAR},
      </if>
      <if test="descbic != null">
        descbic = #{descbic,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icloud.model.score.Score">
    update t_score
    set openid = #{openid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      header_url = #{headerUrl,jdbcType=VARCHAR},
      from_mark = #{fromMark,jdbcType=VARCHAR},
      descbic = #{descbic,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>